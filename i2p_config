#!/bin/sh

set -e

if [ `id -u ` -ne 0 ]; then 

    echo "This script must be run as root" 

    exit 1 

fi
clear
#TODO Add Qubes Template check
echo "Disclaimer \n"
echo "This script will makes persistent changes to Whonix "
echo "It could degrease your Anonymity or make Whonix Leak Information"
echo "If you rely on strong Anonymity and are exposed to a large Advesary"
echo "If thats the case for you Please dont use this !"
echo "\nThe Author takes no Responsibility if anything breaks \n"
echo "The following changes will be made:"
echo "--Add the I2P Repositories"
echo "--Update the system's packages" 
echo "--Install I2P, custom Init.d script" 
echo "--Changes the Default I2P Settings" 
echo "--Configure I2P to automatically start at boot"
echo "--Make I2P's directories persistent \n"
echo "\n Be sure that you have set the ProxyVM that I2P should run on as the Netvm of this Template!!! \n"


echo -n "Are you sure you wish to continue? (y/n)  " 


read ans 
case $ans in 

    y*|Y*|j*|J*) 
        ;; 
    *) 
        exit 0 
        ;; 
esac 

echo "Installing I2P \n"
echo "Adding the I2P Repository to the Apt list"
#Add I2P Repo
cat  > /etc/apt/sources.list.d/i2p.list << EOF
deb http://deb.i2p2.no/ stable main
#deb-src http://deb.i2p2.no/ stable main
EOF
echo"OK"

sleep 1
echo "Adding the I2P Repo key if not present"
# Add the I2P repo key if apt doesn't know about it yet
if ! apt-key fingerprint | fgrep -q "7840 E761 0F28 B904 7535  49D7 67EC E560 5BCF 1346" > /dev/null 2>&1; then
    if wget --quiet https://geti2p.net/_static/i2p-debian-repo.key.asc -O $TMPFILE; then
        apt-key add $TMPFILE
        rm -f $TMPFILE
    else
        # Since fetching with wget failed, let's try getting it from a keyserver
        apt-key adv --keyserver hkp://pool.sks-keyservers.net --recv-key 0x67ECE5605BCF1346
    fi
fi

apt-get update
apt-get install i2p i2p-keyring
#TODO Decide if we should set predefined settings here
#echo "i2p i2p/daemon boolean true" | debconf-set-selections

echo "Configuring I2P"

GATEWAYIP=$(qubesdb-read /qubes-gateway)
I2P="/var/lib/i2p/i2p-config/"
I2PROUTER="/usr/bin/i2prouter"
WRAPPER="/etc/i2p/wrapper.config"

# This must be set in order for the i2p init script to work
sed -i 's/^RUN_DAEMON=.*$/RUN_DAEMON="true"/' /etc/default/i2p

# Remove the "i2prouter" script, its man page, and its apparmor profile
# since these are not used by Tails:
#rm /etc/apparmor.d/usr.bin.i2prouter /usr/share/man/man1/i2prouter.1.gz

# Install custom i2prouter stub scripts
for script in ${I2PROUTER} ${I2PROUTER}-nowrapper; do
    echo "Removing $script"
    dpkg-divert --rename --add "${script}"
    cat > "$script" << EOF
#!/bin/sh
echo "This script is not used by Whonix."
exit 0
EOF
    chmod 755 "$script"
done

#TODO Move Scripts to their right place whonix-i2p 30_i2p_start.sh 30-i2p.sh 30.i2p_restart.sh i2p_config_proxyvm

# Remove the outproxy from the tunnel on port 4444
# This will remove the following lines:
#      tunnel.0.proxyList=false.i2p
#      tunnel.0.option.i2ptunnel.httpclient.SSLOutproxies=false.i2p
# The SSLOutproxies option was first set in I2P 0.9.15
sed -i '/^.*tunnel\.0\.\(proxyList\|option\.i2ptunnel\.httpclient\.SSLOutproxies\)/d' "$I2P/i2ptunnel.config"

# Disable the https outproxy (port 4445)
sed -i 's|^.*\(tunnel\.6\.startOnLoad\).*|\1=false|' "$I2P/i2ptunnel.config"

# Don't serve the router console on IPv6
sed -i 's|^clientApp\.0\.args=7657\s\+::1,127\.0\.0\.1|clientApp.0.args=7657 127.0.0.1|' "$I2P/clients.config"

# Disable IPv6 in the wrapper
sed -i 's|^.*\(wrapper\.java\.additional\.5=-Djava\.net\.preferIPv4Stack=\).*|\1true|' "$WRAPPER"
sed -i 's|^.*\(wrapper\.java\.additional\.6=-Djava\.net\.preferIPv6Addresses=\).*|\1false|' "$WRAPPER"
echo "Changing I2Ps listening IP"
#Change the Listening IP from Localhost to the Whonix-Gateway Ip
sed -i "s/\(.*interface=\).*/\1$GATEWAYIP/g;s/\(.*targetHost=\).*/\1$GATEWAYIP/g" "$I2P/i2ptunnel.config"
sed -i "s/127\.0\.0\.1/$GATEWAYIP/g" "$I2P/clients.config"
echo "susimail.host=$GATEWAYIP" >> /usr/share/i2p/susimail.config
echo "OK"

# Tails/Whonix specific router configs:
# * i2cp: allows java clients to communicate with I2P outside of the JVM. Disabled.
# * IPv6: Disabled
# * HiddenMode: Enabled
# * In-I2P Network Updates: Disabled
# * Inbound connections: Disabled (setting is "i2cp.ntcp.autoip")
# * Disable I2P plugins
# * Disable NTP
cat > "$I2P/router.config" << EOF
# NOTE: This I2P config file must use UTF-8 encoding
i2cp.disableInterface=true
i2np.ntcp.ipv6=false
i2np.ntcp.autoip=false
i2np.udp.ipv6=false
router.isHidden=true
router.updateDisabled=true
router.enablePlugins=false
time.disabled=true
EOF

cat > "$I2P/susimail.config" << EOF
susimail.pop3.leave.on.server=true
EOF

# enforce apparmor
echo Setting the I2P apparmor profile to enforce mode
sed  -i -re 's|flags=\(complain\)||' /etc/apparmor.d/system_i2p
echo"OK"


echo "Adding I2P's paths to Qubes Persistent Folders"

#Add I2P's paths to Qubes Persistent Folders
#Currently not working , once Qubes R3.2 is out it will work
#cat >> "/usr/lib/qubes-bind-dirs.d/40_qubes-whonix.conf" << EOF
#binds+=( '/etc/i2p' )
#binds+=( '/var/lib/i2p/i2p-config/' )
#EOF

#old path /usr/lib/qubes-whonix/bind-directories
#Currently used method 
#Add I2P's paths to Qubes Persistent Folders
sed -i "70i \    '/rw/srv/whonix/etc/i2p:/etc/i2p'" /usr/lib/qubes-whonix/bind-directories
sed -i "71i \    '/rw/srv/whonix/var/lib/i2p/i2p-config:/var/lib/i2p/i2p-config'" /usr/lib/qubes-whonix/bind-directories
sed -i "72i \    '/rw/srv/whonix/usr/share/i2p:/usr/share/i2p'" /usr/lib/qubes-whonix/bind-directories
echo "Changing I2Ps Default Router Config to our needs"
echo"OK"

echo "Adding WHonix Firewall Rules"

#Add the needed Whonix Firewall User Rules so I2P can connect and is reachable by the Worksation
cat >> "/etc/whonix_firewall.d/50_user.conf" << EOF
NO_NAT_USERS+=" $(id -u i2psvc)"
GATEWAY_TRANSPARENT_DNS=1
GATEWAY_TRANSPARENT_TCP=1
SOCKS_PORT_I2P_BOB=2827
SOCKS_PORT_I2P_TAHOE=3456
SOCKS_PORT_I2P_WWW=4444
SOCKS_PORT_I2P_WWW2=4445
SOCKS_PORT_I2P_IRC=6668
SOCKS_PORT_I2P_XMPP=7622
SOCKS_PORT_I2P_CONTROL=7650
SOCKS_PORT_I2P_SOCKSIRC=7651
SOCKS_PORT_I2P_SOCKS=7652
SOCKS_PORT_I2P_I2CP=7654
SOCKS_PORT_I2P_SAM=7656
SOCKS_PORT_I2P_CON=7657
SOCKS_PORT_I2P_EEP=7658
SOCKS_PORT_I2P_SMTP=7659
SOCKS_PORT_I2P_POP=7660
SOCKS_PORT_I2P_BOTESMTP=7661
SOCKS_PORT_I2P_BOTEIMAP=7662
SOCKS_PORT_I2P_MTN=8998
EOF
echo "OK"


echo "Reloading Whonix Firewall"
#Reload Whonix Firewall
/usr/bin/whonix_firewall
sleep 1
clear

echo " Done setting Everything Up , on the next Reboot of your ProxyVm \n I2P should start up and you can access it via your Whonix-Workstation"
